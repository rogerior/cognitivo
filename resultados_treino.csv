tecnica;mean_absolute_error;mean_squared_error;mean_squared_log_error;median_absolute_error;identificador_aleatorio;tipo_split;normalizador;redutor_dimensionalidade;pipeline;parametros;random_state_split;random_state_random_search;cross_validation_random_search;best_estimator;best_params
RandomForestRegressor;0.4096774193548387;0.4806451612903226;0.010733609551431886;0.0;4595006;train_test_split 30%;Não utilizado;Não utilizado;"[('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};2;31;8;"Pipeline(memory=None,
         steps=[('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.3870967741935484;0.4490322580645161;0.010144925794349221;0.0;5568907;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};2;8;5;"Pipeline(memory=None,
         steps=[('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=10, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 10, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.41935483870967744;0.4993548387096774;0.011263678160135087;0.0;159770;train_test_split 30%;Não utilizado;Não utilizado;"[('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};2;28;10;"Pipeline(memory=None,
         steps=[('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4948387096774193;0.5916129032258064;0.013090422361333277;0.0;1632255;train_test_split 30%;Não utilizado;Não utilizado;"[('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};2;29;4;"Pipeline(memory=None,
         steps=[('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='lad', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'lad', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5219354838709678;0.62;0.013604021506877244;0.0;2025002;train_test_split 30%;Não utilizado;Não utilizado;"[('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};2;1;10;"Pipeline(memory=None,
         steps=[('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5174193548387097;0.6232258064516129;0.01386008599223382;0.0;714201;train_test_split 30%;Não utilizado;Não utilizado;"[('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};2;16;3;"Pipeline(memory=None,
         steps=[('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=True))],
         verbose=False)";{'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 150}
LinearRegression;0.4961290322580645;0.5774193548387097;0.012838074713307607;0.0;5596639;train_test_split 30%;Não utilizado;Não utilizado;[('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))];{'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};2;14;6;"Pipeline(memory=None,
         steps=[('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.6187096774193548;0.8174193548387096;0.018127034188459783;1.0;8569594;train_test_split 30%;Não utilizado;Não utilizado;"[('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};2;42;9;"Pipeline(memory=None,
         steps=[('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=1000, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1000, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;3.810967741935484;15.711612903225806;0.24475975640890005;4.0;5154729;train_test_split 30%;Não utilizado;Não utilizado;"[('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};2;5;8;"Pipeline(memory=None,
         steps=[('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='constant',
                              loss='epsilon_insensitive', max_iter=500,
                              n_iter_no_change=5, penalty='l1', power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l1', 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'constant', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.7335483870967742;1.4174193548387095;0.09359323726402803;1.0;4742567;train_test_split 30%;Não utilizado;Não utilizado;"[('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};2;27;9;"Pipeline(memory=None,
         steps=[('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=False,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': False}
KNeighborsRegressor;0.4761290322580645;0.5922580645161291;0.013412655470268023;0.0;5254109;train_test_split 30%;Não utilizado;Não utilizado;"[('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};2;17;9;"Pipeline(memory=None,
         steps=[('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='auto', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=1,
                                     weights='distance'))],
         verbose=False)";{'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'auto'}
RadiusNeighborsRegressor;4.377419354838709;25.65741935483871;2.7538642856839366;5.0;1607207;train_test_split 30%;Não utilizado;Não utilizado;"[('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};2;19;8;"Pipeline(memory=None,
         steps=[('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
MLPRegressor;0.5561290322580645;0.6864516129032258;0.015317216079438771;0.0;6714473;train_test_split 30%;Não utilizado;Não utilizado;"[('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};2;8;6;"Pipeline(memory=None,
         steps=[('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1, 3),
                              learning_rate='constant',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (1, 3), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5425806451612903;0.7593548387096775;0.01715082954596906;0.0;7002316;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};2;9;5;"Pipeline(memory=None,
         steps=[('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4251612903225807;0.5077419354838709;0.011521404484136244;0.0;8015939;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};2;8;3;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'normalizer__norm': 'l1', 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.44387096774193546;0.5380645161290323;0.012141837449087877;0.0;1977346;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};2;25;10;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mae',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=10, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'normalizer__norm': 'l1', 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 10, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': True}
BaggingRegressor;0.5096774193548387;0.6541935483870968;0.01472999930311442;0.0;5649263;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};2;26;9;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=5, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'normalizer__norm': 'l2', 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 5, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4935483870967742;0.572258064516129;0.012790972935550806;0.0;8845060;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};2;37;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='sqrt',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'normalizer__norm': 'max', 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'sqrt', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5496774193548387;0.6580645161290323;0.014529715454749141;0.0;435002;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};2;41;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=75,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'normalizer__norm': 'l2', 'AdaBoostRegressor__n_estimators': 75, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5612903225806452;0.6774193548387096;0.01503045732893095;1.0;8745200;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};2;39;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=50, tol=1e-05, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 9, 'normalizer__norm': 'l2', 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 50}
LinearRegression;0.5787096774193549;0.7064516129032258;0.015715934881549775;1.0;7228813;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};2;2;4;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'normalizer__norm': 'l1', 'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.5812903225806452;0.7245161290322579;0.016105199865107715;1.0;9715141;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};2;34;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'normalizer__norm': 'l1', 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5793548387096774;0.7019354838709677;0.015666821290791732;1.0;5075043;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};2;23;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='squared_loss', max_iter=1000,
                              n_iter_no_change=5, penalty=None, power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'normalizer__norm': 'l2', 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': None, 'SGDRegressor__max_iter': 1000, 'SGDRegressor__loss': 'squared_loss', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.6251612903225806;0.7735483870967742;0.017522531420787996;1.0;4788429;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};2;6;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'normalizer__norm': 'l1', 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4238709677419355;0.5090322580645161;0.011558312518809071;0.0;5588909;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};2;36;3;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=2,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'normalizer__norm': 'l2', 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'ball_tree'}
RadiusNeighborsRegressor;0.4909677419354839;0.6122580645161291;0.01419369057269071;0.0;6871909;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};2;40;3;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'normalizer__norm': 'l2', 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.5903225806451613;0.7232258064516129;0.016151387436936726;1.0;4838305;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};2;1;4;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(500, 3),
                              learning_rate='invscaling',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='adam',
                              tol=0.001, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'normalizer__norm': 'l2', 'MLPRegressor__tol': 0.001, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'invscaling', 'MLPRegressor__hidden_layer_sizes': (500, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5787096774193549;0.8380645161290322;0.01903018159805865;0.0;4607670;train_test_split 30%;normalizer;pca;"[('normalizer', Normalizer(copy=True, norm='l2')), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};2;26;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'normalizer__norm': 'max', 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.39225806451612905;0.4787096774193548;0.010752391014914316;0.0;6071847;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};40;25;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=False, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': False}
ExtraTreesRegressor;0.4012903225806452;0.487741935483871;0.011084055948119894;0.0;244511;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};40;33;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mse',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': True}
BaggingRegressor;0.4103225806451613;0.4980645161290322;0.011189256760771836;0.0;9808640;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};40;37;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5993548387096774;0.7516129032258064;0.016810507911984542;1.0;9576808;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};40;12;8;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='huber', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5587096774193548;0.6748387096774193;0.015021153965501941;1.0;9206203;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};40;11;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.4845161290322581;0.5851612903225807;0.012965776927908413;0.0;7395235;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};40;24;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5348387096774193;0.6548387096774193;0.014739624101272197;0.0;6335020;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};40;23;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.9180645161290324;1.5180645161290325;0.032359570957505183;1.0;1047690;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};40;31;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
TheilSenRegressor;0.4961290322580645;0.5903225806451613;0.01307767700423727;0.0;2928227;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};40;22;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4612903225806452;0.5541935483870968;0.012380523887025437;0.0;2493690;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};40;26;3;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=1,
                                     weights='uniform'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'KNeighborsRegressor__weights': 'uniform', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'kd_tree'}
RadiusNeighborsRegressor;0.6290322580645161;1.1451612903225807;0.07214501210263832;0.0;3455092;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};40;10;3;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='brute', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'brute'}
MLPRegressor;0.4825806451612904;0.5664516129032258;0.012595354788184672;0.0;6093197;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};40;36;3;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='logistic', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100,),
                              learning_rate='constant',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='sgd',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'sgd', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (100,), 'MLPRegressor__activation': 'logistic'}
ExtraTreeRegressor;0.6006451612903225;0.9141935483870968;0.02082434593426016;0.0;9921096;train_test_split 30%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};40;26;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='log2', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'ExtraTreeRegressor__max_features': 'log2', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4361290322580645;0.5380645161290323;0.012530916468049968;0.0;2043085;train_test_split 30%;Não utilizado;Não utilizado;"[('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};3;28;10;"Pipeline(memory=None,
         steps=[('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4348387096774193;0.5406451612903226;0.012653059097069515;0.0;9970987;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};3;13;10;"Pipeline(memory=None,
         steps=[('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mse',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': True}
BaggingRegressor;0.4264516129032258;0.5206451612903226;0.012162646180123944;0.0;9989972;train_test_split 30%;Não utilizado;Não utilizado;"[('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};3;35;4;"Pipeline(memory=None,
         steps=[('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5483870967741935;0.6851612903225807;0.0154775433685734;0.0;8216121;train_test_split 30%;Não utilizado;Não utilizado;"[('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};3;7;7;"Pipeline(memory=None,
         steps=[('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='lad', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'lad', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.532258064516129;0.6625806451612903;0.015005213577991285;0.0;818920;train_test_split 30%;Não utilizado;Não utilizado;"[('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};3;28;4;"Pipeline(memory=None,
         steps=[('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5451612903225806;0.7051612903225807;0.016058244465909796;0.0;5298006;train_test_split 30%;Não utilizado;Não utilizado;"[('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};3;19;8;"Pipeline(memory=None,
         steps=[('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=True))],
         verbose=False)";{'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 150}
LinearRegression;0.5283870967741936;0.6561290322580645;0.014943053367935343;0.0;6290718;train_test_split 30%;Não utilizado;Não utilizado;[('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))];{'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};3;9;8;"Pipeline(memory=None,
         steps=[('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=False, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': False}
PassiveAggressiveRegressor;0.6251612903225806;0.8341935483870968;0.01881608191147421;1.0;613514;train_test_split 30%;Não utilizado;Não utilizado;"[('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};3;36;4;"Pipeline(memory=None,
         steps=[('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.7554838709677419;1.084516129032258;0.025155327168222736;1.0;6434474;train_test_split 30%;Não utilizado;Não utilizado;"[('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};3;3;7;"Pipeline(memory=None,
         steps=[('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='epsilon_insensitive', max_iter=1000,
                              n_iter_no_change=5, penalty='elasticnet',
                              power_t=0.25, random_state=None, shuffle=True,
                              tol=0.001, validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'elasticnet', 'SGDRegressor__max_iter': 1000, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.6129032258064516;1.1574193548387095;0.06957798458598219;0.0;1109023;train_test_split 30%;Não utilizado;Não utilizado;"[('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};3;17;4;"Pipeline(memory=None,
         steps=[('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4916129032258065;0.6232258064516129;0.0143777706739316;0.0;112302;train_test_split 30%;Não utilizado;Não utilizado;"[('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};3;13;10;"Pipeline(memory=None,
         steps=[('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='auto', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=2,
                                     weights='distance'))],
         verbose=False)";{'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'auto'}
RadiusNeighborsRegressor;4.408387096774193;26.09225806451613;2.7662666850610798;5.0;8896516;train_test_split 30%;Não utilizado;Não utilizado;"[('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};3;7;5;"Pipeline(memory=None,
         steps=[('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='brute', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'brute'}
MLPRegressor;0.5270967741935484;0.6561290322580645;0.014912798636589753;0.0;4523592;train_test_split 30%;Não utilizado;Não utilizado;"[('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};3;23;6;"Pipeline(memory=None,
         steps=[('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100, 3),
                              learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=1000,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='lbfgs',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 1000, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (100, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5774193548387097;0.8664516129032258;0.019814825909688482;0.0;8158244;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};3;26;3;"Pipeline(memory=None,
         steps=[('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4458204334365325;0.5464396284829721;0.01253590641944566;0.0;203118;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};8;32;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.44969040247678016;0.5859133126934984;0.013359018027801059;0.0;8846729;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};8;39;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=5, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 5, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.5294117647058824;0.7554179566563467;0.017333375363336602;0.0;6604990;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};8;3;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=False,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': False}
GradientBoostingRegressor;0.4767801857585139;0.5882352941176471;0.01344340406695179;0.0;9632861;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};8;16;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5727554179566563;0.7105263157894737;0.016088257535748017;1.0;8981021;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};8;31;7;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='linear', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'linear'}
HuberRegressor;0.5247678018575851;0.6718266253869969;0.01512784512616535;0.0;2612618;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};8;33;4;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': None, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 150}
LinearRegression;0.5735294117647058;0.7484520123839009;0.016938066497021276;0.0;8039479;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};8;31;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.8343653250773994;1.3436532507739938;0.029956529859709;1.0;7234893;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};8;30;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.5518575851393189;0.7190402476780186;0.016226851190788164;0.0;6727456;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};8;8;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='epsilon_insensitive', max_iter=500,
                              n_iter_no_change=5, penalty='l2', power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l2', 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;0.5913312693498453;0.7972136222910217;0.017832952924792485;1.0;8858331;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};8;6;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.423374613003096;0.5332817337461301;0.012330591009408538;0.0;990948;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};8;3;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=2,
                                     weights='distance'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;0.5054179566563467;0.6478328173374613;0.01491917844250505;0.0;8991143;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};8;27;8;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 3, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
ExtraTreeRegressor;0.5936532507739938;0.8955108359133127;0.0204992269541936;0.0;5600317;train_test_split 25%;standard_scaler;pca;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};8;30;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='log2', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': True, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'ExtraTreeRegressor__max_features': 'log2', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.43078412391093895;0.5333978702807357;0.01235771509338082;0.0;5369524;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};36;5;9;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='log2',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'normalizer__norm': 'max', 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'log2', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4298160696999032;0.5382381413359149;0.01251722415275397;0.0;3719899;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};36;30;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='sqrt',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=10, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'normalizer__norm': 'l1', 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 10, 'ExtraTreesRegressor__max_features': 'sqrt', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.43078412391093895;0.5198451113262342;0.011920281129153524;0.0;5662633;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};36;31;10;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'normalizer__norm': 'l2', 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5730880929332043;0.7086156824782188;0.016090658632838442;1.0;295707;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};36;39;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=50,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'normalizer__norm': 'max', 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 50, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.6098741529525653;0.7550822846079379;0.0172121004825605;1.0;8808236;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};36;15;3;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'normalizer__norm': 'l1', 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.6040658276863504;0.7744433688286544;0.01760965661009772;1.0;6852000;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};36;30;4;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False))],
         verbose=False)";{'normalizer__norm': 'l2', 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5866408518877058;0.7473378509196515;0.01707824913041428;1.0;3579516;train_test_split 20%;normalizer;Não utilizado;[('normalizer', Normalizer(copy=True, norm='l2')), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))];{'normalizer__norm': ('l1', 'l2', 'max'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};36;31;6;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=False, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'normalizer__norm': 'l1', 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': False}
PassiveAggressiveRegressor;0.6398838334946757;0.8218780251694094;0.018791616635816542;1.0;9868272;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};36;10;10;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'normalizer__norm': 'l1', 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.6582768635043562;0.8615682478218779;0.019922033632112653;1.0;5051748;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};36;20;10;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l1')),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='squared_epsilon_insensitive', max_iter=500,
                              n_iter_no_change=5, penalty='elasticnet',
                              power_t=0.25, random_state=None, shuffle=True,
                              tol=0.001, validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'normalizer__norm': 'l1', 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'elasticnet', 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'squared_epsilon_insensitive', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.8121974830590513;1.7918683446272992;0.11622676510117895;1.0;1777544;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};36;20;4;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'normalizer__norm': 'l2', 'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.6205227492739593;0.8257502420135527;0.01869598241334689;1.0;6215864;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};36;28;10;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=2,
                                     weights='uniform'))],
         verbose=False)";{'normalizer__norm': 'l2', 'KNeighborsRegressor__weights': 'uniform', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'ball_tree'}
RadiusNeighborsRegressor;0.5121006776379478;0.6921587608906099;0.016402005970282376;0.0;6220298;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};36;41;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='auto', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'normalizer__norm': 'max', 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'auto'}
MLPRegressor;0.579864472410455;0.7308809293320426;0.01642804474190903;1.0;2709653;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};36;5;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='max')),
                ('MLPRegressor',
                 MLPRegressor(activation='tanh', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1, 3),
                              learning_rate='constant',
                              learning_rate_init=0.001, max_iter=1000,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'normalizer__norm': 'max', 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 1000, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (1, 3), 'MLPRegressor__activation': 'tanh'}
ExtraTreeRegressor;0.6011616650532429;0.9477250726040658;0.02195649027744196;0.0;1154630;train_test_split 20%;normalizer;Não utilizado;"[('normalizer', Normalizer(copy=True, norm='l2')), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'normalizer__norm': ('l1', 'l2', 'max'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};36;16;5;"Pipeline(memory=None,
         steps=[('normalizer', Normalizer(copy=True, norm='l2')),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'normalizer__norm': 'l2', 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4535483870967742;0.5335483870967742;0.012084744556388579;0.0;7121766;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};35;29;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4064516129032258;0.4825806451612904;0.010978708696867498;0.0;6939954;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};35;16;4;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.4445161290322581;0.5529032258064516;0.012526078477843356;0.0;4143191;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};35;21;7;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=5, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 5, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4735483870967742;0.5483870967741935;0.0123870703312216;0.0;1674436;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};35;35;8;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='huber', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5277419354838709;0.6348387096774194;0.014188289740525446;0.0;2310492;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};35;16;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5187096774193548;0.6425806451612903;0.014278800750349385;0.0;2065012;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};35;33;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=50, tol=1e-05, warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 50}
LinearRegression;0.5161290322580645;0.6296774193548387;0.014050129092533316;0.0;2987767;train_test_split 30%;standard_scaler;Não utilizado;[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))];{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};35;22;7;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': False, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.5606451612903226;0.7270967741935483;0.01585895647539645;0.0;6889321;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};35;25;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5232258064516129;0.6432258064516129;0.014296191282572288;0.0;1646355;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};35;35;4;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=False)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='epsilon_insensitive', max_iter=1000,
                              n_iter_no_change=5, penalty='l1', power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'standard_scaler__with_std': False, 'standard_scaler__with_mean': True, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l1', 'SGDRegressor__max_iter': 1000, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.6019354838709677;0.9851612903225806;0.03815328671122505;0.0;5129128;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};35;11;4;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=False,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': False}
KNeighborsRegressor;0.41935483870967744;0.5135483870967742;0.01183996259728891;0.0;3238502;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};35;8;9;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=1,
                                     weights='distance'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': True, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;2.0825806451612903;10.913548387096775;1.1570239450063098;1.0;6140764;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};35;15;10;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.5206451612903226;0.6406451612903226;0.014252698392152962;0.0;2468773;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};35;31;6;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1,), learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=1000,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='adam',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 1000, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (1,), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5625806451612904;0.8580645161290322;0.019584660030313655;0.0;6063839;train_test_split 30%;standard_scaler;Não utilizado;"[('standard_scaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'standard_scaler__with_mean': [True, False], 'standard_scaler__with_std': [True, False], 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};35;36;5;"Pipeline(memory=None,
         steps=[('standard_scaler',
                 StandardScaler(copy=True, with_mean=False, with_std=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'standard_scaler__with_std': True, 'standard_scaler__with_mean': False, 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4806451612903226;0.6303225806451613;0.014595885768983297;0.0;6476372;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};39;8;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=False, criterion='mae',
                                       max_depth=None, max_features='log2',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=5, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 5, 'RandomForestRegressor__max_features': 'log2', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': False}
ExtraTreesRegressor;0.4425806451612903;0.5638709677419355;0.013211747354532177;0.0;2040868;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};39;7;6;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.4567741935483871;0.5793548387096774;0.013628921417978229;0.0;3776922;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};39;36;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.567741935483871;0.7006451612903226;0.01625253517669833;1.0;8703169;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};39;29;6;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='lad', max_depth=3,
                                           max_features='sqrt',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 7, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'sqrt', 'GradientBoostingRegressor__loss': 'lad', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5761290322580646;0.7038709677419355;0.016320211676894954;1.0;3901994;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};39;12;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='linear', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'linear'}
HuberRegressor;0.5445161290322581;0.6903225806451613;0.015833561698867547;0.0;786257;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};39;38;10;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 150}
LinearRegression;0.6612903225806451;0.8754838709677419;0.02016137599706851;1.0;9066175;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};39;5;6;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.8083870967741935;1.2445161290322582;0.03009616742390557;1.0;5314253;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};39;31;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
TheilSenRegressor;0.6180645161290322;0.8864516129032258;0.01966504059441912;1.0;4513418;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};39;19;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.5548387096774193;0.7793548387096774;0.017930678497153706;0.0;9815608;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};39;16;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=5, p=1,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 5, 'KNeighborsRegressor__algorithm': 'kd_tree'}
RadiusNeighborsRegressor;2.6354838709677417;14.474193548387095;1.547064615598982;1.0;4202650;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};39;30;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.5696774193548387;0.7154838709677419;0.01655101630736434;1.0;8006044;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};39;1;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='tanh', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100, 3),
                              learning_rate='invscaling',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'invscaling', 'MLPRegressor__hidden_layer_sizes': (100, 3), 'MLPRegressor__activation': 'tanh'}
ExtraTreeRegressor;0.5941935483870968;0.9038709677419356;0.02049584198459236;0.0;5731546;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};39;40;7;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4342105263157895;0.5069659442724458;0.011530887841187049;0.0;480130;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};42;25;7;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'min_max_scaler__feature_range': (1, 100), 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4032507739938079;0.4698142414860681;0.010722592508264676;0.0;3129928;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};42;16;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mse',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'min_max_scaler__feature_range': (1, 10), 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': True}
BaggingRegressor;0.4589783281733746;0.5688854489164087;0.012922211023765841;0.0;5285545;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};42;6;7;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'min_max_scaler__feature_range': (1, 100), 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4930340557275542;0.5642414860681114;0.012586337735529056;0.0;7642437;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};42;18;3;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'min_max_scaler__feature_range': (1, 100), 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5340557275541795;0.6191950464396285;0.013892765460723513;0.0;2118540;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};42;3;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='linear', n_estimators=75,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'AdaBoostRegressor__n_estimators': 75, 'AdaBoostRegressor__loss': 'linear'}
HuberRegressor;0.5294117647058824;0.6625386996904025;0.014918756448748988;0.0;2250723;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};42;20;3;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5882352941176471;0.7445820433436533;0.016877763867112767;1.0;9288651;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};42;24;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'min_max_scaler__feature_range': (1, 100), 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.6346749226006192;0.826625386996904;0.01850690105735381;1.0;2526084;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};42;30;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'min_max_scaler__feature_range': (1, 100), 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.598297213622291;0.7623839009287926;0.01724005327126351;1.0;6674798;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};42;12;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='squared_loss', max_iter=1500,
                              n_iter_no_change=5, penalty='elasticnet',
                              power_t=0.25, random_state=None, shuffle=False,
                              tol=0.001, validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'min_max_scaler__feature_range': (0, 1), 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'elasticnet', 'SGDRegressor__max_iter': 1500, 'SGDRegressor__loss': 'squared_loss', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.5479876160990712;0.6934984520123839;0.015563830689522582;0.0;2064731;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};42;41;3;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.3924148606811145;0.4713622291021672;0.01083883263784051;0.0;4921564;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};42;20;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='auto', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=1,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'auto'}
RadiusNeighborsRegressor;0.6547987616099071;0.8188854489164087;0.02001812795142548;1.0;5686222;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};42;34;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='brute', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'brute'}
MLPRegressor;0.5642414860681114;0.7097523219814241;0.01597731050312283;0.0;7406449;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};42;5;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1,), learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (1, 10), 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (1,), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5688854489164087;0.8181114551083591;0.018629075347983453;0.0;987849;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};42;1;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='log2', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 7, 'min_max_scaler__feature_range': (0, 1), 'ExtraTreeRegressor__max_features': 'log2', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4109677419354839;0.4819354838709677;0.010861494667068216;0.0;3415888;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};29;39;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 9, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.3851612903225806;0.4561290322580645;0.01034128036860877;0.0;3697630;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};29;27;8;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.5361290322580645;0.7090322580645161;0.015786482653349962;0.0;6347026;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};29;12;3;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4625806451612903;0.5477419354838711;0.012143997032618618;0.0;9576629;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};29;39;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5832258064516129;0.7006451612903226;0.015896084198500516;1.0;5814134;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};29;42;9;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='square', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'square'}
HuberRegressor;0.5045161290322581;0.6232258064516129;0.013754685750515272;0.0;729936;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};29;41;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 150}
LinearRegression;5.6322580645161295;32.36129032258064;3.2830923931263376;6.0;4222247;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};29;24;4;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=False, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': False}
PassiveAggressiveRegressor;0.8225806451612904;1.2729032258064517;0.02798545099088037;1.0;9852148;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};29;14;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5438709677419354;0.6883870967741935;0.015321268224733103;0.0;3249011;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};29;39;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='epsilon_insensitive', max_iter=500,
                              n_iter_no_change=5, penalty=None, power_t=0.25,
                              random_state=None, shuffle=True, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': None, 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;2.7032258064516133;11.72;0.9616798755860848;2.0;6150631;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};29;33;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=False,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 3, 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': False}
KNeighborsRegressor;0.46;0.5761290322580646;0.012956787263803005;0.0;5245951;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};29;37;4;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=2,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;3.965161290322581;23.278709677419357;2.477054103959172;5.0;2638985;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};29;39;6;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 9, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.6135483870967742;0.7451612903225806;0.01654297532592532;1.0;3515336;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};29;9;7;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100,),
                              learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='lbfgs',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 3, 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (100,), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5890322580645161;0.8741935483870967;0.019399022627056808;0.0;7753334;train_test_split 30%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};29;31;10;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4317521781219748;0.5440464666021297;0.012826030410012543;0.0;8384563;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};10;23;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.3998063891577928;0.4927395934172314;0.011817132583577928;0.0;1464304;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};10;29;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=10, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 10, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.4085188770571152;0.4917715392061955;0.011678926010866677;0.0;3450414;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};10;11;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4724104549854792;0.5730880929332043;0.013224261820491095;0.0;2443616;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};10;36;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='huber', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5324298160696999;0.6698935140367861;0.01550777027281491;0.0;3314849;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};10;42;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5411423039690223;0.7018393030009681;0.016188009328164284;0.0;8876997;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};10;32;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 100}
LinearRegression;0.526621490803485;0.6660212971926428;0.01540380889278796;0.0;498526;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};10;38;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;1.0454985479186834;1.90513068731849;0.048073520953775095;1.0;6199198;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};10;25;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;1.1035818005808324;1.895450145208132;0.03977311981009641;1.0;2298216;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};10;31;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='huber', max_iter=500, n_iter_no_change=5,
                              penalty='l2', power_t=0.25, random_state=None,
                              shuffle=True, tol=0.001, validation_fraction=0.1,
                              verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'l2', 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.6185866408518877;1.1742497579864473;0.07123280837745226;0.0;8841314;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};10;37;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.42884801548886736;0.57405614714424;0.013404870347840532;0.0;7699151;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};10;16;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=3, p=2,
                                     weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 3, 'KNeighborsRegressor__algorithm': 'ball_tree'}
RadiusNeighborsRegressor;1.4104549854791868;6.442400774443369;0.6602116292625171;1.0;1623357;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};10;38;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.6476282671829623;0.8354307841239109;0.0195950531216958;1.0;7341161;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};10;14;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100, 3),
                              learning_rate='constant',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (100, 3), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5624394966118103;0.8199419167473379;0.019305900313537308;0.0;5925984;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};10;7;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4367741935483871;0.5258064516129032;0.011920363873553969;0.0;4512131;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};12;3;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4290322580645161;0.5206451612903226;0.011944586381972943;0.0;2621803;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};12;27;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mae',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': True}
GradientBoostingRegressor;0.5793548387096774;0.7174193548387097;0.01613767907019265;1.0;8783906;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};12;11;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=No....1,
                                           loss='huber', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 5, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.567741935483871;0.6761290322580645;0.01525275259057935;1.0;2239097;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};12;10;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5161290322580645;0.6425806451612903;0.014287667045954643;0.0;7736690;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};12;37;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 150}
LinearRegression;0.5445161290322581;0.7019354838709677;0.01575787577771754;0.0;4632476;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};12;6;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.9387096774193548;1.5890322580645162;0.03438973776443298;1.0;951978;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};12;18;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1000, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1000, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.6412903225806451;0.8103225806451613;0.018345574531181408;1.0;1451001;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};12;20;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='huber', max_iter=1000, n_iter_no_change=5,
                              penalty='l1', power_t=0.25, random_state=None,
                              shuffle=False, tol=0.001, validation_fraction=0.1,
                              verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l1', 'SGDRegressor__max_iter': 1000, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;0.6438709677419355;0.8154838709677419;0.018510002457617195;1.0;4566156;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};12;39;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.5187096774193548;0.6451612903225806;0.014527766887547453;0.0;9256571;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};12;36;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=3, p=2,
                                     weights='uniform'))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'KNeighborsRegressor__weights': 'uniform', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 3, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;0.6361290322580645;0.8258064516129032;0.02032022097739336;1.0;1048406;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};12;36;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 3, 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
ExtraTreeRegressor;0.5761290322580646;0.8909677419354839;0.020101865210578003;0.0;4216089;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};12;6;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4411764705882353;0.5433436532507739;0.012403929511438651;0.0;7137412;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};12;24;10;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.42569659442724456;0.5278637770897833;0.01210428205766619;0.0;6026854;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};12;5;10;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='sqrt',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'sqrt', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.44969040247678016;0.5565015479876161;0.012772560664038115;0.0;764166;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};12;42;8;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.6215170278637769;0.7778637770897833;0.017452718834010596;1.0;1142980;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};12;2;6;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mae',
                                           init=None, learning_rate=0.1,
                                           loss='huber', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'mae'}
AdaBoostRegressor;0.5487616099071208;0.6586687306501547;0.014771977042376018;0.0;2587385;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};12;16;10;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='linear', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'linear'}
HuberRegressor;0.5239938080495357;0.6524767801857585;0.014443709926145487;0.0;3620413;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};12;4;4;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=50, tol=1e-05, warm_start=True))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 50}
LinearRegression;0.6308049535603715;0.7995356037151703;0.017922709968511037;1.0;9924788;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};12;5;8;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.8219814241486069;1.3405572755417956;0.027610248019778787;1.0;8290607;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};12;23;5;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1000, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 1000, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5657894736842105;0.6989164086687306;0.01545663450956211;1.0;4272066;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};12;21;4;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='optimal',
                              loss='huber', max_iter=500, n_iter_no_change=5,
                              penalty='elasticnet', power_t=0.25,
                              random_state=None, shuffle=True, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'elasticnet', 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'optimal', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;2.576625386996904;10.9156346749226;0.8811953610657808;2.0;1666114;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};12;38;7;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=False,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 3, 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': False}
KNeighborsRegressor;0.4574303405572756;0.5859133126934984;0.013199391557126187;0.0;2775678;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};12;26;7;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=3, p=1,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 3, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;0.5704334365325078;1.3769349845201238;0.11117094835905003;0.0;4561855;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};12;24;8;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='brute', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'brute'}
MLPRegressor;0.5232198142414861;0.6346749226006192;0.014063968317484831;0.0;3994623;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};12;30;7;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(500, 3),
                              learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=1000,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='sgd',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'sgd', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 1000, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (500, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5611455108359134;0.8243034055727554;0.01882326884258103;0.0;2463101;train_test_split 25%;Não utilizado;pca;"[('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};12;1;3;"Pipeline(memory=None,
         steps=[('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4143272023233301;0.5208131655372701;0.011756100834151913;0.0;2670152;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};14;25;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=False, criterion='mae',
                                       max_depth=None, max_features='log2',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'log2', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': False}
ExtraTreesRegressor;0.4298160696999032;0.5246853823814134;0.011954023578844734;0.0;6119436;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};14;17;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=10, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 10, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.41626331074540174;0.5130687318489835;0.011736531052328898;0.0;7646377;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};14;14;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.4859632139399807;0.5827686350435625;0.013011105652807284;0.0;754072;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};14;14;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5188770571151985;0.6350435624394967;0.014090485635053374;0.0;9153016;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};14;39;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5566311713455954;0.7270087124878993;0.016377515216313348;0.0;3217289;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};14;7;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5237173281703775;0.6611810261374637;0.014709237709022603;0.0;3659455;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};14;39;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;1.3959341723136496;3.1132623426911907;0.06735843341022525;1.0;639961;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};14;25;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.6156824782187803;1.2681510164569216;0.0834971516293614;0.0;7166003;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};14;21;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='epsilon_insensitive', max_iter=1500,
                              n_iter_no_change=5, penalty=None, power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': None, 'SGDRegressor__max_iter': 1500, 'SGDRegressor__loss': 'epsilon_insensitive', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.7037754114230397;1.4220716360116166;0.08782086935556943;1.0;5868465;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};14;18;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=False,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': False}
KNeighborsRegressor;0.43756050338818975;0.5343659244917716;0.012129921461402014;0.0;8767082;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};14;33;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='auto', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=1,
                                     weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'auto'}
RadiusNeighborsRegressor;4.08325266214908;24.09099709583737;2.5593410167691557;5.0;7982028;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};14;10;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
MLPRegressor;0.5314617618586641;0.6940948693126815;0.015354134855125106;0.0;6865661;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};14;11;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100, 3),
                              learning_rate='invscaling',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='adam',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'invscaling', 'MLPRegressor__hidden_layer_sizes': (100, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5711519845111326;0.8363988383349468;0.01956735520740755;0.0;1953763;train_test_split 20%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};14;24;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.41142303969022265;0.5198451113262342;0.011485469897097549;0.0;5571269;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};21;42;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=False, criterion='mse',
                                       max_depth=None, max_features='log2',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=5, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (1, 100), 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 5, 'RandomForestRegressor__max_features': 'log2', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': False}
ExtraTreesRegressor;0.398838334946757;0.4724104549854792;0.010565466241701444;0.0;7058651;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};21;9;8;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=True, criterion='mse',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'min_max_scaler__feature_range': (1, 10), 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': True}
BaggingRegressor;0.420135527589545;0.4995159728944821;0.0110814880686234;0.0;5421258;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};21;31;6;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'min_max_scaler__feature_range': (1, 10), 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5072604065827686;0.6214908034849952;0.013421472785019642;0.0;8850385;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};21;22;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='lad', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=50,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': None, 'min_max_scaler__feature_range': (0, 1), 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 50, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'lad', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5304937076476283;0.6524685382381413;0.014233941723608213;0.0;8014939;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};21;11;6;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 7, 'min_max_scaler__feature_range': (1, 10), 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5188770571151985;0.6544046466602129;0.014213123933049037;0.0;737702;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};21;21;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=50, tol=1e-05, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (1, 100), 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 50}
LinearRegression;5.666021297192643;32.78509196515005;3.2995549482251603;6.0;1251971;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};21;30;8;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=False, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'min_max_scaler__feature_range': (1, 100), 'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': False}
PassiveAggressiveRegressor;0.7696030977734754;1.0716360116166506;0.024680616443552263;1.0;6358187;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};21;15;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=True,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 5, 'min_max_scaler__feature_range': (0, 1), 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': True, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5295256534365924;0.6766698935140368;0.014795784273320288;0.0;238551;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};21;34;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='squared_epsilon_insensitive', max_iter=1500,
                              n_iter_no_change=5, penalty='elasticnet',
                              power_t=0.25, random_state=None, shuffle=True,
                              tol=0.001, validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'min_max_scaler__feature_range': (1, 10), 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'elasticnet', 'SGDRegressor__max_iter': 1500, 'SGDRegressor__loss': 'squared_epsilon_insensitive', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;0.547918683446273;0.6969990319457889;0.015376842559634691;0.0;1064270;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};21;1;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 7, 'min_max_scaler__feature_range': (0, 1), 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.3872216844143272;0.4743465634075508;0.010663500726814112;0.0;6685453;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};21;25;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=9, p=1,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 9, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;0.5285575992255567;0.6582768635043562;0.01448434498643145;0.0;9169901;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};21;20;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'min_max_scaler__feature_range': (1, 10), 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
MLPRegressor;0.5004840271055179;0.6089060987415296;0.013262838324775213;0.0;5063701;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};21;41;6;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='logistic', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100,),
                              learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='adam',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 9, 'min_max_scaler__feature_range': (1, 10), 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (100,), 'MLPRegressor__activation': 'logistic'}
ExtraTreeRegressor;0.5837366892545982;0.8373668925459826;0.01896576697442908;0.0;6394280;train_test_split 20%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};21;37;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'min_max_scaler__feature_range': (0, 1), 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4270967741935484;0.5225806451612903;0.011916322705044688;0.0;9985905;train_test_split 30%;Não utilizado;Não utilizado;"[('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};35;19;10;"Pipeline(memory=None,
         steps=[('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4251612903225807;0.5051612903225806;0.011606029125889957;0.0;9341466;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};35;6;8;"Pipeline(memory=None,
         steps=[('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='sqrt',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'sqrt', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.41935483870967744;0.4993548387096774;0.01125488861488751;0.0;7959208;train_test_split 30%;Não utilizado;Não utilizado;"[('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};35;21;6;"Pipeline(memory=None,
         steps=[('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.46;0.532258064516129;0.011976079542075736;0.0;5530551;train_test_split 30%;Não utilizado;Não utilizado;"[('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};35;27;4;"Pipeline(memory=None,
         steps=[('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5309677419354839;0.6406451612903226;0.01423381741141735;0.0;9317163;train_test_split 30%;Não utilizado;Não utilizado;"[('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};35;36;8;"Pipeline(memory=None,
         steps=[('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=50,
                                   random_state=None))],
         verbose=False)";{'AdaBoostRegressor__n_estimators': 50, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5251612903225806;0.6606451612903226;0.014676386965354657;0.0;7747748;train_test_split 30%;Não utilizado;Não utilizado;"[('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};35;38;4;"Pipeline(memory=None,
         steps=[('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=True))],
         verbose=False)";{'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 150}
LinearRegression;0.5161290322580645;0.6296774193548387;0.014050129092533316;0.0;3167946;train_test_split 30%;Não utilizado;Não utilizado;[('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))];{'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};35;28;5;"Pipeline(memory=None,
         steps=[('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.9761290322580644;1.6380645161290324;0.03340963899705749;1.0;7299570;train_test_split 30%;Não utilizado;Não utilizado;"[('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};35;10;3;"Pipeline(memory=None,
         steps=[('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.9716129032258064;1.5935483870967742;0.03294206736917084;1.0;152986;train_test_split 30%;Não utilizado;Não utilizado;"[('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};35;8;10;"Pipeline(memory=None,
         steps=[('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='huber', max_iter=1000, n_iter_no_change=5,
                              penalty='l1', power_t=0.25, random_state=None,
                              shuffle=False, tol=0.001, validation_fraction=0.1,
                              verbose=0, warm_start=False))],
         verbose=False)";{'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l1', 'SGDRegressor__max_iter': 1000, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;0.6316129032258064;1.3374193548387097;0.09395693121637792;0.0;3151135;train_test_split 30%;Não utilizado;Não utilizado;"[('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};35;24;3;"Pipeline(memory=None,
         steps=[('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=150, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'TheilSenRegressor__max_iter': 150, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.5051612903225806;0.6496774193548387;0.0147006126418538;0.0;1108171;train_test_split 30%;Não utilizado;Não utilizado;"[('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};35;1;9;"Pipeline(memory=None,
         steps=[('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=2,
                                     weights='distance'))],
         verbose=False)";{'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'ball_tree'}
RadiusNeighborsRegressor;4.409032258064517;25.923870967741927;2.7715030474383693;5.0;5671330;train_test_split 30%;Não utilizado;Não utilizado;"[('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};35;8;4;"Pipeline(memory=None,
         steps=[('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'kd_tree'}
MLPRegressor;0.5361290322580645;0.6767741935483871;0.015120862859829491;0.0;3013685;train_test_split 30%;Não utilizado;Não utilizado;"[('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};35;39;7;"Pipeline(memory=None,
         steps=[('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(500, 3),
                              learning_rate='constant',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='adam',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (500, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5754838709677419;0.832258064516129;0.01883591570214186;0.0;7027585;train_test_split 30%;Não utilizado;Não utilizado;"[('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};35;2;8;"Pipeline(memory=None,
         steps=[('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4249226006191951;0.5379256965944272;0.0127650799380311;0.0;4483891;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};22;24;8;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='sqrt',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'sqrt', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.3947368421052632;0.5077399380804953;0.012171600693801807;0.0;4500865;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};22;38;3;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.4605263157894737;0.5967492260061921;0.014116893931028432;0.0;6011487;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};22;13;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 5, 'min_max_scaler__feature_range': (0, 1), 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5464396284829721;0.6749226006191951;0.015627555499618168;0.0;2260722;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};22;4;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mse',
                                           init=None, learning_rate=0.1,
                                           loss='ls', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 5, 'min_max_scaler__feature_range': (1, 10), 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'ls', 'GradientBoostingRegressor__criterion': 'mse'}
AdaBoostRegressor;0.5456656346749226;0.6679566563467493;0.015402600523184538;0.0;5544715;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};22;36;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=75,
                                   random_state=None))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (1, 10), 'AdaBoostRegressor__n_estimators': 75, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5348297213622291;0.6756965944272446;0.015504230399730487;0.0;4721321;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};22;22;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5534055727554179;0.7020123839009288;0.01613262889111253;0.0;9358258;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};22;11;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 7, 'min_max_scaler__feature_range': (1, 100), 'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;5.178018575851393;27.64860681114552;2.5284765448275004;5.0;7865355;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};22;8;10;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=False, epsilon=0.1,
                                            fit_intercept=False,
                                            loss='epsilon_insensitive',
                                            max_iter=1000, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 3, 'min_max_scaler__feature_range': (0, 1), 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1000, 'PassiveAggressiveRegressor__fit_intercept': False, 'PassiveAggressiveRegressor__early_stopping': False}
SGDRegressor;0.5565015479876161;0.7082043343653249;0.016329483372703884;0.0;8557471;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};22;1;9;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 10))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='squared_loss', max_iter=1500,
                              n_iter_no_change=5, penalty='l1', power_t=0.25,
                              random_state=None, shuffle=True, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'min_max_scaler__feature_range': (1, 10), 'SGDRegressor__warm_start': False, 'SGDRegressor__shuffle': True, 'SGDRegressor__penalty': 'l1', 'SGDRegressor__max_iter': 1500, 'SGDRegressor__loss': 'squared_loss', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.5518575851393189;0.7205882352941176;0.016234845791601924;0.0;411245;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};22;25;7;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4481424148606811;0.5828173374613003;0.013849536433201935;0.0;4758694;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};22;30;4;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(1, 100))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=7, p=1,
                                     weights='distance'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'min_max_scaler__feature_range': (1, 100), 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 7, 'KNeighborsRegressor__algorithm': 'kd_tree'}
RadiusNeighborsRegressor;0.6563467492260062;0.8359133126934984;0.01949211014307766;1.0;8967307;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};22;41;7;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='ball_tree', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='uniform'))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'min_max_scaler__feature_range': (0, 1), 'RadiusNeighborsRegressor__weights': 'uniform', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'ball_tree'}
MLPRegressor;0.5030959752321982;0.6191950464396285;0.01436446119079434;0.0;5540800;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};22;3;5;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100,),
                              learning_rate='invscaling',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='lbfgs',
                              tol=1e-05, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'MLPRegressor__tol': 1e-05, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'invscaling', 'MLPRegressor__hidden_layer_sizes': (100,), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5247678018575851;0.7631578947368421;0.01767154498554823;0.0;9966434;train_test_split 25%;min_max_scaler;pca;"[('min_max_scaler', MinMaxScaler(copy=True, feature_range=(0, 1))), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'min_max_scaler__feature_range': [(0, 1), (1, 10), (1, 100)], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};22;30;8;"Pipeline(memory=None,
         steps=[('min_max_scaler',
                 MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mse', max_depth=None,
                                    max_features='sqrt', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'min_max_scaler__feature_range': (0, 1), 'ExtraTreeRegressor__max_features': 'sqrt', 'ExtraTreeRegressor__criterion': 'mse'}
RandomForestRegressor;0.4317521781219748;0.5150048402710552;0.011677190297144384;0.0;7554261;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};37;4;9;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mse',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mse', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.42884801548886736;0.5411423039690223;0.012317703270797715;0.0;3905919;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};37;13;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 5, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.4094869312681511;0.4966118102613746;0.011293293745503374;0.0;545428;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};37;23;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=15, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 15, 'BaggingRegressor__bootstrap': True}
AdaBoostRegressor;0.5469506292352372;0.6573088092933205;0.014605159043211273;0.0;6030422;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};37;3;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='exponential', n_estimators=75,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'AdaBoostRegressor__n_estimators': 75, 'AdaBoostRegressor__loss': 'exponential'}
HuberRegressor;0.5382381413359149;0.6815101645692159;0.015118797507206447;0.0;248956;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};37;24;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100, tol=1e-05, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 100}
LinearRegression;0.5256534365924492;0.6515004840271055;0.014470034086418754;0.0;4062908;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};37;20;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.8896418199419167;1.4607938044530493;0.03260360662384368;1.0;3172771;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};37;32;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=1500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 1500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.5953533397870281;0.7831558567279767;0.01728871505959353;1.0;2139426;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};37;13;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='huber', max_iter=1500, n_iter_no_change=5,
                              penalty='l2', power_t=0.25, random_state=None,
                              shuffle=False, tol=0.001, validation_fraction=0.1,
                              verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': 'l2', 'SGDRegressor__max_iter': 1500, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.6495643756050339;1.0135527589545017;0.04221751382851832;1.0;1523031;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};37;24;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4695062923523717;0.6224588576960309;0.013826052982456066;0.0;4098272;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};37;38;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='kd_tree', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=5, p=1,
                                     weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 1, 'KNeighborsRegressor__n_neighbors': 5, 'KNeighborsRegressor__algorithm': 'kd_tree'}
RadiusNeighborsRegressor;0.4888673765730881;0.6534365924491772;0.017877223502013682;0.0;2611801;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};37;3;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='auto', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=1,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 1, 'RadiusNeighborsRegressor__algorithm': 'auto'}
MLPRegressor;0.5624394966118103;0.7153920619554696;0.01575243498915255;0.0;1940141;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};37;10;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(100,),
                              learning_rate='adaptive',
                              learning_rate_init=0.001, max_iter=300,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='adam',
                              tol=0.001, validation_fraction=0.1, verbose=False,
                              warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 7, 'MLPRegressor__tol': 0.001, 'MLPRegressor__solver': 'adam', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 300, 'MLPRegressor__learning_rate': 'adaptive', 'MLPRegressor__hidden_layer_sizes': (100,), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5663117134559535;0.8528557599225557;0.01876038394968758;0.0;9570147;train_test_split 20%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};37;21;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='log2', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'ExtraTreeRegressor__max_features': 'log2', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4527863777089784;0.5735294117647058;0.01312645810961943;0.0;1378692;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};8;15;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=10, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'RandomForestRegressor__warm_start': True, 'RandomForestRegressor__n_estimators': 10, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4102167182662539;0.5061919504643962;0.011687557634412012;0.0;9887515;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};8;6;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mae',
                                     max_depth=None, max_features='log2',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=15, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'ExtraTreesRegressor__warm_start': False, 'ExtraTreesRegressor__n_estimators': 15, 'ExtraTreesRegressor__max_features': 'log2', 'ExtraTreesRegressor__criterion': 'mae', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.40634674922600617;0.489938080495356;0.011348187987194756;0.0;144068;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};8;15;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=True,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'BaggingRegressor__warm_start': False, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': True}
GradientBoostingRegressor;0.5247678018575851;0.6501547987616099;0.014527371926798285;0.0;3324766;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};8;17;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse',
                                           init=None, learning_rate=0.1,
                                           loss='lad', max_depth=3,
                                           max_features='log2',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=150,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'GradientBoostingRegressor__warm_start': False, 'GradientBoostingRegressor__n_estimators': 150, 'GradientBoostingRegressor__max_features': 'log2', 'GradientBoostingRegressor__loss': 'lad', 'GradientBoostingRegressor__criterion': 'friedman_mse'}
AdaBoostRegressor;0.5526315789473685;0.6811145510835913;0.015309198388412269;0.0;1071468;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};8;5;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='linear', n_estimators=25,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'AdaBoostRegressor__n_estimators': 25, 'AdaBoostRegressor__loss': 'linear'}
HuberRegressor;0.5294117647058824;0.6888544891640866;0.015587501847708327;0.0;9391188;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};8;30;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'HuberRegressor__warm_start': True, 'HuberRegressor__max_iter': 150}
LinearRegression;0.5340557275541795;0.6625386996904025;0.014978253258561197;0.0;2592432;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};8;7;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'LinearRegression__normalize': False, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;1.088235294117647;1.9860681114551084;0.03991004974390982;1.0;9281015;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};8;12;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=False)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': False, 'PassiveAggressiveRegressor__warm_start': True, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;5.788699690402478;34.31037151702786;3.643370831347296;6.0;9177622;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};8;16;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=True,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='invscaling',
                              loss='squared_epsilon_insensitive', max_iter=500,
                              n_iter_no_change=5, penalty=None, power_t=0.25,
                              random_state=None, shuffle=False, tol=0.001,
                              validation_fraction=0.1, verbose=0,
                              warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': None, 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'squared_epsilon_insensitive', 'SGDRegressor__learning_rate': 'invscaling', 'SGDRegressor__early_stopping': True}
TheilSenRegressor;0.6462848297213623;1.3397832817337458;0.0913551976782034;0.0;4152712;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};8;35;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=300, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'TheilSenRegressor__max_iter': 300, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.4272445820433437;0.5371517027863777;0.012442239116801156;0.0;4728;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};8;15;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=5, p=2,
                                     weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'KNeighborsRegressor__weights': 'distance', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 5, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;1.3003095975232195;5.975232198142416;0.6122640108280253;0.0;134858;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};8;33;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='auto', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'auto'}
MLPRegressor;0.6501547987616099;0.8328173374613003;0.019066965127560283;1.0;902012;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};8;18;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('MLPRegressor',
                 MLPRegressor(activation='identity', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1, 3),
                              learning_rate='invscaling',
                              learning_rate_init=0.001, max_iter=100,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=True, solver='lbfgs',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'lbfgs', 'MLPRegressor__shuffle': True, 'MLPRegressor__max_iter': 100, 'MLPRegressor__learning_rate': 'invscaling', 'MLPRegressor__hidden_layer_sizes': (1, 3), 'MLPRegressor__activation': 'identity'}
ExtraTreeRegressor;0.5580495356037152;0.8351393188854489;0.018577222307787147;0.0;7614402;train_test_split 25%;robust_scaler;Não utilizado;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};8;32;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='log2', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'ExtraTreeRegressor__max_features': 'log2', 'ExtraTreeRegressor__criterion': 'mae'}
RandomForestRegressor;0.4445161290322581;0.5425806451612903;0.01254238197849322;0.0;9555139;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RandomForestRegressor', RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
                      max_features='auto', max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators='warn',
                      n_jobs=None, oob_score=False, random_state=None,
                      verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RandomForestRegressor__n_estimators': [5, 10, 15], 'RandomForestRegressor__criterion': ('mse', 'mae'), 'RandomForestRegressor__max_features': ('auto', 'sqrt', 'log2'), 'RandomForestRegressor__bootstrap': [True, False], 'RandomForestRegressor__warm_start': [True, False]};32;12;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=False)),
                ('RandomForestRegressor',
                 RandomForestRegressor(bootstrap=True, criterion='mae',
                                       max_depth=None, max_features='auto',
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=1, min_samples_split=2,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=15, n_jobs=None,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'full', 'pca__n_components': None, 'RandomForestRegressor__warm_start': False, 'RandomForestRegressor__n_estimators': 15, 'RandomForestRegressor__max_features': 'auto', 'RandomForestRegressor__criterion': 'mae', 'RandomForestRegressor__bootstrap': True}
ExtraTreesRegressor;0.4612903225806452;0.5812903225806452;0.01358382578024338;0.0;3584624;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreesRegressor', ExtraTreesRegressor(bootstrap=False, criterion='mse', max_depth=None,
                    max_features='auto', max_leaf_nodes=None,
                    min_impurity_decrease=0.0, min_impurity_split=None,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators='warn',
                    n_jobs=None, oob_score=False, random_state=None, verbose=0,
                    warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreesRegressor__n_estimators': [5, 10, 15], 'ExtraTreesRegressor__criterion': ('mse', 'mae'), 'ExtraTreesRegressor__max_features': ('auto', 'sqrt', 'log2'), 'ExtraTreesRegressor__bootstrap': [True, False], 'ExtraTreesRegressor__warm_start': [True, False]};32;1;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('ExtraTreesRegressor',
                 ExtraTreesRegressor(bootstrap=False, criterion='mse',
                                     max_depth=None, max_features='auto',
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=5, n_jobs=None,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': None, 'ExtraTreesRegressor__warm_start': True, 'ExtraTreesRegressor__n_estimators': 5, 'ExtraTreesRegressor__max_features': 'auto', 'ExtraTreesRegressor__criterion': 'mse', 'ExtraTreesRegressor__bootstrap': False}
BaggingRegressor;0.587741935483871;0.8625806451612903;0.019988041354821524;0.0;819545;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('BaggingRegressor', BaggingRegressor(base_estimator=None, bootstrap=True, bootstrap_features=False,
                 max_features=1.0, max_samples=1.0, n_estimators=10,
                 n_jobs=None, oob_score=False, random_state=None, verbose=0,
                 warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'BaggingRegressor__n_estimators': [5, 10, 15], 'BaggingRegressor__bootstrap': [True, False], 'BaggingRegressor__warm_start': [True, False]};32;12;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('BaggingRegressor',
                 BaggingRegressor(base_estimator=None, bootstrap=False,
                                  bootstrap_features=False, max_features=1.0,
                                  max_samples=1.0, n_estimators=10, n_jobs=None,
                                  oob_score=False, random_state=None, verbose=0,
                                  warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'BaggingRegressor__warm_start': True, 'BaggingRegressor__n_estimators': 10, 'BaggingRegressor__bootstrap': False}
GradientBoostingRegressor;0.5961290322580645;0.7625806451612903;0.017441893264281826;1.0;7661837;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('GradientBoostingRegressor', GradientBoostingRegressor(alpha=0.9, criterion='friedman_mse', init=None,
                          learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='auto',
                          random_state=None, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'GradientBoostingRegressor__loss': ('ls', 'lad', 'huber', 'quantile'), 'GradientBoostingRegressor__criterion': ('friedman_mse', 'mse', 'mae'), 'GradientBoostingRegressor__max_features': ('auto', 'sqrt', 'log2'), 'GradientBoostingRegressor__n_estimators': [50, 100, 150], 'GradientBoostingRegressor__warm_start': [True, False]};32;5;7;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('GradientBoostingRegressor',
                 GradientBoostingRegressor(alpha=0.9, criterion='mae',
                                           init=None,....1,
                                           loss='huber', max_depth=3,
                                           max_features='auto',
                                           max_leaf_nodes=None,
                                           min_impurity_decrease=0.0,
                                           min_impurity_split=None,
                                           min_samples_leaf=1,
                                           min_samples_split=2,
                                           min_weight_fraction_leaf=0.0,
                                           n_estimators=100,
                                           n_iter_no_change=None,
                                           presort='auto', random_state=None,
                                           subsample=1.0, tol=0.0001,
                                           validation_fraction=0.1, verbose=0,
                                           warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'GradientBoostingRegressor__warm_start': True, 'GradientBoostingRegressor__n_estimators': 100, 'GradientBoostingRegressor__max_features': 'auto', 'GradientBoostingRegressor__loss': 'huber', 'GradientBoostingRegressor__criterion': 'mae'}
AdaBoostRegressor;0.6258064516129033;0.7690322580645161;0.017747414973379838;1.0;9848228;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('AdaBoostRegressor', AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=None))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'AdaBoostRegressor__loss': ('linear', 'square', 'exponential'), 'AdaBoostRegressor__n_estimators': [25, 50, 75]};32;13;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=None,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=False)),
                ('AdaBoostRegressor',
                 AdaBoostRegressor(base_estimator=None, learning_rate=1.0,
                                   loss='square', n_estimators=75,
                                   random_state=None))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': False, 'pca__svd_solver': 'randomized', 'pca__n_components': None, 'AdaBoostRegressor__n_estimators': 75, 'AdaBoostRegressor__loss': 'square'}
HuberRegressor;0.5374193548387097;0.692258064516129;0.015711345789043662;0.0;6565068;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'HuberRegressor__max_iter': [50, 100, 150], 'HuberRegressor__warm_start': [True, False]};32;37;3;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('HuberRegressor',
                 HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=150, tol=1e-05, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 11, 'HuberRegressor__warm_start': False, 'HuberRegressor__max_iter': 150}
LinearRegression;0.6509677419354839;0.8225806451612904;0.01878814276883009;1.0;1481916;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('LinearRegression', LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'LinearRegression__fit_intercept': [True, False], 'LinearRegression__normalize': [True, False]};32;38;4;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=5,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('LinearRegression',
                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
                                  normalize=True))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 5, 'LinearRegression__normalize': True, 'LinearRegression__fit_intercept': True}
PassiveAggressiveRegressor;0.7683870967741936;1.1464516129032258;0.025531972791865958;1.0;8197627;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('PassiveAggressiveRegressor', PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=None, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'PassiveAggressiveRegressor__max_iter': [500, 1000, 1500], 'PassiveAggressiveRegressor__fit_intercept': [True, False], 'PassiveAggressiveRegressor__early_stopping': [True, False], 'PassiveAggressiveRegressor__shuffle': [True, False], 'PassiveAggressiveRegressor__warm_start': [True, False]};32;7;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('PassiveAggressiveRegressor',
                 PassiveAggressiveRegressor(C=1.0, average=False,
                                            early_stopping=True, epsilon=0.1,
                                            fit_intercept=True,
                                            loss='epsilon_insensitive',
                                            max_iter=500, n_iter_no_change=5,
                                            random_state=None, shuffle=False,
                                            tol=0.001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'PassiveAggressiveRegressor__warm_start': False, 'PassiveAggressiveRegressor__shuffle': False, 'PassiveAggressiveRegressor__max_iter': 500, 'PassiveAggressiveRegressor__fit_intercept': True, 'PassiveAggressiveRegressor__early_stopping': True}
SGDRegressor;0.6006451612903225;0.7490322580645161;0.017066378648078855;1.0;1029309;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('SGDRegressor', SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
             eta0=0.01, fit_intercept=True, l1_ratio=0.15,
             learning_rate='invscaling', loss='squared_loss', max_iter=1000,
             n_iter_no_change=5, penalty='l2', power_t=0.25, random_state=None,
             shuffle=True, tol=0.001, validation_fraction=0.1, verbose=0,
             warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'SGDRegressor__loss': ('squared_loss', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'), 'SGDRegressor__penalty': ('l1', 'l2', 'elasticnet', None), 'SGDRegressor__max_iter': [500, 1000, 1500], 'SGDRegressor__shuffle': [True, False], 'SGDRegressor__warm_start': [True, False], 'SGDRegressor__learning_rate': ('constant', 'optimal', 'invscaling', 'adaptive'), 'SGDRegressor__early_stopping': [True, False]};32;21;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=7,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('SGDRegressor',
                 SGDRegressor(alpha=0.0001, average=False, early_stopping=False,
                              epsilon=0.1, eta0=0.01, fit_intercept=True,
                              l1_ratio=0.15, learning_rate='adaptive',
                              loss='huber', max_iter=500, n_iter_no_change=5,
                              penalty=None, power_t=0.25, random_state=None,
                              shuffle=False, tol=0.001, validation_fraction=0.1,
                              verbose=0, warm_start=True))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 7, 'SGDRegressor__warm_start': True, 'SGDRegressor__shuffle': False, 'SGDRegressor__penalty': None, 'SGDRegressor__max_iter': 500, 'SGDRegressor__loss': 'huber', 'SGDRegressor__learning_rate': 'adaptive', 'SGDRegressor__early_stopping': False}
TheilSenRegressor;0.7032258064516129;1.304516129032258;0.02537850321013809;1.0;9159624;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300,
                  max_subpopulation=10000, n_jobs=None, n_subsamples=None,
                  random_state=None, tol=0.001, verbose=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'TheilSenRegressor__fit_intercept': [True, False], 'TheilSenRegressor__max_iter': [150, 300, 450]};32;12;6;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=False, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=False)),
                ('TheilSenRegressor',
                 TheilSenRegressor(copy_X=True, fit_intercept=True,
                                   max_iter=450, max_subpopulation=10000,
                                   n_jobs=None, n_subsamples=None,
                                   random_state=None, tol=0.001,
                                   verbose=False))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': False, 'pca__whiten': False, 'pca__svd_solver': 'auto', 'pca__n_components': 9, 'TheilSenRegressor__max_iter': 450, 'TheilSenRegressor__fit_intercept': True}
KNeighborsRegressor;0.5187096774193548;0.6554838709677421;0.015059701795514219;0.0;7245483;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('KNeighborsRegressor', KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                    weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'KNeighborsRegressor__n_neighbors': [3, 5, 7, 9], 'KNeighborsRegressor__weights': ('uniform', 'distance'), 'KNeighborsRegressor__algorithm': ('auto', 'ball_tree', 'kd_tree', 'brute'), 'KNeighborsRegressor__p': [1, 2]};32;2;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='randomized', tol=0.0,
                     whiten=True)),
                ('KNeighborsRegressor',
                 KNeighborsRegressor(algorithm='brute', leaf_size=30,
                                     metric='minkowski', metric_params=None,
                                     n_jobs=None, n_neighbors=3, p=2,
                                     weights='uniform'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'randomized', 'pca__n_components': 11, 'KNeighborsRegressor__weights': 'uniform', 'KNeighborsRegressor__p': 2, 'KNeighborsRegressor__n_neighbors': 3, 'KNeighborsRegressor__algorithm': 'brute'}
RadiusNeighborsRegressor;0.5367741935483871;0.7135483870967742;0.01986481990549195;0.0;3845708;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('RadiusNeighborsRegressor', RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                         metric_params=None, n_jobs=None, p=2, radius=1.0,
                         weights='uniform'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'RadiusNeighborsRegressor__weights': ('uniform', 'distance'), 'RadiusNeighborsRegressor__algorithm': ('ball_tree', 'kd_tree', 'brute', 'auto'), 'RadiusNeighborsRegressor__p': [1, 2]};32;2;5;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=True)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=3,
                     random_state=None, svd_solver='auto', tol=0.0,
                     whiten=True)),
                ('RadiusNeighborsRegressor',
                 RadiusNeighborsRegressor(algorithm='brute', leaf_size=30,
                                          metric='minkowski',
                                          metric_params=None, n_jobs=None, p=2,
                                          radius=1.0, weights='distance'))],
         verbose=False)";{'robust_scaler__with_scaling': True, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'auto', 'pca__n_components': 3, 'RadiusNeighborsRegressor__weights': 'distance', 'RadiusNeighborsRegressor__p': 2, 'RadiusNeighborsRegressor__algorithm': 'brute'}
MLPRegressor;0.5393548387096774;0.6670967741935484;0.015202070560233106;0.0;137663;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('MLPRegressor', MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
             beta_2=0.999, early_stopping=False, epsilon=1e-08,
             hidden_layer_sizes=(100,), learning_rate='constant',
             learning_rate_init=0.001, max_iter=200, momentum=0.9,
             n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
             random_state=None, shuffle=True, solver='adam', tol=0.0001,
             validation_fraction=0.1, verbose=False, warm_start=False))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'MLPRegressor__hidden_layer_sizes': [(1,), (100,), (500,), (1, 3), (100, 3), (500, 3)], 'MLPRegressor__activation': ('identity', 'logistic', 'tanh', 'relu'), 'MLPRegressor__solver': ('lbfgs', 'sgd', 'adam'), 'MLPRegressor__learning_rate': ('constant', 'invscaling', 'adaptive'), 'MLPRegressor__shuffle': [True, False], 'MLPRegressor__max_iter': [100, 200, 300, 1000], 'MLPRegressor__tol': [0.001, 0.0001, 1e-05]};32;12;10;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=11,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('MLPRegressor',
                 MLPRegressor(activation='relu', alpha=0.0001,
                              batch_size='auto', beta_1=0.9, beta_2=0.999,
                              early_stopping=False, epsilon=1e-08,
                              hidden_layer_sizes=(1,), learning_rate='constant',
                              learning_rate_init=0.001, max_iter=200,
                              momentum=0.9, n_iter_no_change=10,
                              nesterovs_momentum=True, power_t=0.5,
                              random_state=None, shuffle=False, solver='sgd',
                              tol=0.0001, validation_fraction=0.1,
                              verbose=False, warm_start=False))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 11, 'MLPRegressor__tol': 0.0001, 'MLPRegressor__solver': 'sgd', 'MLPRegressor__shuffle': False, 'MLPRegressor__max_iter': 200, 'MLPRegressor__learning_rate': 'constant', 'MLPRegressor__hidden_layer_sizes': (1,), 'MLPRegressor__activation': 'relu'}
ExtraTreeRegressor;0.5787096774193549;0.8470967741935483;0.019591401353830456;0.0;9231667;train_test_split 30%;robust_scaler;pca;"[('robust_scaler', RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)), ('pca', PCA(copy=True, iterated_power='auto', n_components=None, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)), ('ExtraTreeRegressor', ExtraTreeRegressor(criterion='mse', max_depth=None, max_features='auto',
                   max_leaf_nodes=None, min_impurity_decrease=0.0,
                   min_impurity_split=None, min_samples_leaf=1,
                   min_samples_split=2, min_weight_fraction_leaf=0.0,
                   random_state=None, splitter='random'))]";{'robust_scaler__with_centering': [True, False], 'robust_scaler__with_scaling': [True, False], 'pca__n_components': [None, 3, 5, 7, 9, 11], 'pca__whiten': [True, False], 'pca__svd_solver': ('auto', 'full', 'randomized'), 'ExtraTreeRegressor__criterion': ('mse', 'mae'), 'ExtraTreeRegressor__max_features': ('auto', 'sqrt', 'log2')};32;7;8;"Pipeline(memory=None,
         steps=[('robust_scaler',
                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),
                              with_centering=True, with_scaling=False)),
                ('pca',
                 PCA(copy=True, iterated_power='auto', n_components=9,
                     random_state=None, svd_solver='full', tol=0.0,
                     whiten=True)),
                ('ExtraTreeRegressor',
                 ExtraTreeRegressor(criterion='mae', max_depth=None,
                                    max_features='auto', max_leaf_nodes=None,
                                    min_impurity_decrease=0.0,
                                    min_impurity_split=None, min_samples_leaf=1,
                                    min_samples_split=2,
                                    min_weight_fraction_leaf=0.0,
                                    random_state=None, splitter='random'))],
         verbose=False)";{'robust_scaler__with_scaling': False, 'robust_scaler__with_centering': True, 'pca__whiten': True, 'pca__svd_solver': 'full', 'pca__n_components': 9, 'ExtraTreeRegressor__max_features': 'auto', 'ExtraTreeRegressor__criterion': 'mae'}
